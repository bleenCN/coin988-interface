import clsx from 'clsx'
import Image, { ImageProps } from 'next/image'
import React, { memo } from 'react'

type IconProps = React.ComponentProps<'svg'>
type ImgProps = Omit<ImageProps, 'src' | 'alt' | 'width' | 'height'>

export const SearchIcon = memo(function SearchIcon(props: IconProps) {
  return (
    <svg
      width="1em"
      height="1em"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M21 21L16.514 16.506M19 10.5C19 12.7543 18.1045 14.9163 16.5104 16.5104C14.9163 18.1045 12.7543 19 10.5 19C8.24566 19 6.08365 18.1045 4.48959 16.5104C2.89553 14.9163 2 12.7543 2 10.5C2 8.24566 2.89553 6.08365 4.48959 4.48959C6.08365 2.89553 8.24566 2 10.5 2C12.7543 2 14.9163 2.89553 16.5104 4.48959C18.1045 6.08365 19 8.24566 19 10.5Z"
        stroke="#9EA1AC"
        strokeWidth="2"
        strokeLinecap="round"
      />
    </svg>
  )
})

export const ThalaIcon = memo(function ThalaIcon(
  props: Omit<ImageProps, 'src' | 'alt' | 'width' | 'height'>,
) {
  return (
    <Image
      src={'/images/icon-thala.png'}
      alt={'Thala'}
      width={24}
      height={24}
      {...props}
    />
  )
})
export const CoinbaseIcon = memo(function CoinbaseIcon(
  props: Omit<ImageProps, 'src' | 'alt' | 'width' | 'height'>,
) {
  return (
    <Image
      src={'/images/icon-coinbase.png'}
      alt={'Coinbase'}
      width={24}
      height={24}
      {...props}
    />
  )
})
export const BlogIcon = memo(function BlogIcon(props: ImgProps) {
  return (
    <Image src={'/images/icon-blog.png'} alt={'blog'} width={24} height={24} {...props} />
  )
})

export const ArrowIcon = memo(function ArrowIcon(
  props: IconProps & { shape?: '>' | '→' },
) {
  const shape = props.shape ?? '>'
  if (shape === '>')
    return (
      <svg
        width="1em"
        height="1em"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...props}
      >
        <path
          d="M8 4L16 12L8 20"
          stroke="currentColor"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    )

  if (shape === '→')
    return (
      <svg
        width="1em"
        height="1em"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g>
          <path
            d="M4 12H20M20 12L13 5M20 12L13 19"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </g>
      </svg>
    )
})

export const LayeredIcon = memo(function LayeredIcon(props: ImgProps) {
  return (
    <Image src={'/images/icon-layered.png'} alt={''} width={74} height={74} {...props} />
  )
})

export const PieIcon = memo(function LayeredIcon(props: ImgProps) {
  return <Image src={'/images/icon-pie.png'} alt={''} width={74} height={74} {...props} />
})

export const WebsiteIcon = memo(function WebsiteIcon(
  props: IconProps & { theme?: 'light' | 'dark' },
) {
  const theme = props.theme ?? 'dark'
  return (
    <svg
      {...props}
      width="1em"
      height="1em"
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
      className={clsx(
        'transition-all',
        {
          'fill-black/40 hover:fill-black/80': theme === 'dark',
          'dark:fill-white/40 dark:hover:fill-white/80': theme === 'dark',
          'fill-white/40 hover:fill-white/80': theme === 'light',
        },
        props.className,
      )}
    >
      <path d="M10.7924 2.54073C6.02814 2.05209 2.05209 6.02814 2.54073 10.7924C2.88044 14.1024 5.89761 17.1196 9.20764 17.4593C13.9719 17.9479 17.9479 13.9719 17.4593 9.20764C17.1196 5.89761 14.1024 2.88044 10.7924 2.54073ZM15.3575 6.42809L16.072 7.85719C15.1148 7.67646 14.8504 7.68482 13.9284 7.85719C13.3828 8.0011 13.0983 8.39101 12.9645 8.65875C12.8959 8.79597 12.8624 8.94826 12.8691 9.10221C12.8875 9.55738 12.8691 10.774 12.1428 11.0718C11.8215 11.204 11.4283 10.7522 11.4283 10.3573C11.4785 8.10653 12.4959 7.66642 12.7737 7.5225C13.0649 7.37189 13.9284 6.7862 13.9284 6.7862C14.5542 6.46825 15.3575 6.42809 15.3575 6.42809ZM6.7862 4.64255L7.233 5.08935C7.35181 5.20816 7.32169 5.40897 7.17276 5.48762C6.75942 5.70852 6.02814 6.27748 5.42069 7.70323C5.38053 7.79527 5.29016 7.85551 5.18976 7.85551H4.28611C4.28611 7.85719 4.34635 5.97124 6.7862 4.64255ZM6.71257 15.5014L5.11445 14.1626C5.29518 13.8012 5.67505 13.5585 6.11014 13.5719C6.66739 13.5903 7.12256 14.0421 7.14431 14.5994C7.15602 14.9692 6.98366 15.2989 6.71257 15.5014ZM9.99916 16.4284C9.19425 16.4284 8.42782 16.2745 7.71829 16.0051C8.02453 15.6336 8.21362 15.1617 8.21362 14.6429C8.21362 13.4598 7.25476 12.4993 6.06997 12.4993C5.42404 12.4993 4.8467 12.7888 4.45345 13.2406C3.89453 12.2884 3.56989 11.1823 3.56989 9.99916C3.56989 9.73142 3.59164 9.46869 3.62344 9.20764L6.03651 8.96666C6.25572 8.94491 6.43478 8.78426 6.47829 8.56839C6.78285 7.07905 8.12159 6.13524 8.95662 5.68007C9.26788 5.51105 9.30971 5.08098 9.03862 4.8534L7.9191 3.9213C8.57174 3.69707 9.26955 3.57156 9.99916 3.57156C11.7529 3.57156 13.341 4.27607 14.5007 5.41399L12.9444 6.03651C12.9444 6.03651 9.28461 7.91576 10.3573 10.7137C10.7171 11.5538 11.363 12.0692 11.9504 12.0692C13.2473 12.0692 13.9903 10.9145 13.9284 9.28461C14.171 9.03527 14.2463 9.04531 14.6429 8.92817C15.4746 8.78928 15.7474 9.04029 16.3849 9.26788C16.4117 9.50885 16.4301 9.7515 16.4301 9.99916C16.4284 13.5502 13.5502 16.4284 9.99916 16.4284Z" />
    </svg>
  )
})

export const TwitterIcon = memo(function TwitterIcon(
  props: IconProps & { theme?: 'light' | 'dark' | 'blue' },
) {
  const theme = props.theme ?? 'dark'
  return (
    <svg
      {...props}
      width="1em"
      height="1em"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={clsx(
        'transition-all',
        {
          'fill-black/40 hover:fill-black/80': theme === 'dark',
          'dark:fill-white/40 dark:hover:fill-white/80': theme === 'dark',
          'fill-white/40 hover:fill-white/80': theme === 'light',
          'fill-dark-foreground-active': theme === 'blue',
        },
        props.className,
      )}
    >
      <path d="M17.1757 4H19.9357L13.9058 10.7782L21 20H15.4455L11.0955 14.4063L6.117 20H3.3555L9.8055 12.7497L3 4.00074H8.6955L12.6278 9.11354L17.1757 4ZM16.2075 18.3759H17.7367L7.8645 5.5393H6.2235L16.2075 18.3759Z" />
    </svg>
  )
})

export const DiscordIcon = memo(function DiscordIcon(
  props: IconProps & { theme?: 'light' | 'dark' | 'blue' },
) {
  const theme = props.theme ?? 'dark'
  return (
    <svg
      {...props}
      width="1em"
      height="1em"
      viewBox="0 0 20 20"
      xmlns="http://www.w3.org/2000/svg"
      className={clsx(
        'transition-all',
        {
          'fill-black/40 hover:fill-black/80': theme === 'dark',
          'dark:fill-white/40 dark:hover:fill-white/80': theme === 'dark',
          'fill-white/40 hover:fill-white/80': theme === 'light',
          'fill-dark-foreground-active': theme === 'blue',
        },
        props.className,
      )}
    >
      <path d="M15.2177 5.15199C15.2135 5.14374 15.2066 5.13728 15.1982 5.13376C14.2256 4.67825 13.1993 4.35344 12.145 4.16745C12.1354 4.16564 12.1255 4.16695 12.1167 4.1712C12.1079 4.17546 12.1006 4.18244 12.0959 4.19115C11.9561 4.45008 11.8293 4.71605 11.7158 4.98803C10.5792 4.8119 9.42312 4.8119 8.28655 4.98803C8.17231 4.71535 8.04341 4.44932 7.90045 4.19115C7.89555 4.18263 7.88824 4.17581 7.87949 4.17158C7.87073 4.16735 7.86093 4.16591 7.85137 4.16745C6.79687 4.35305 5.7705 4.67789 4.79809 5.13378C4.78977 5.13739 4.78274 5.14354 4.77799 5.15139C2.83337 8.11593 2.30066 11.0076 2.56199 13.8634C2.56272 13.8704 2.56483 13.8772 2.56818 13.8833C2.57153 13.8895 2.57606 13.8949 2.5815 13.8992C3.71384 14.7551 4.98037 15.4084 6.32705 15.8312C6.33653 15.8341 6.34666 15.834 6.35607 15.8309C6.36548 15.8277 6.37372 15.8217 6.37968 15.8136C6.66892 15.4119 6.9252 14.9865 7.14593 14.5417C7.14896 14.5356 7.1507 14.5289 7.15101 14.5221C7.15133 14.5152 7.15022 14.5084 7.14777 14.502C7.14531 14.4957 7.14156 14.4899 7.13676 14.4851C7.13197 14.4803 7.12623 14.4767 7.11994 14.4743C6.71579 14.3164 6.32453 14.1262 5.94983 13.9052C5.94302 13.9011 5.93731 13.8954 5.93319 13.8885C5.92906 13.8816 5.92666 13.8738 5.9262 13.8658C5.92573 13.8578 5.92721 13.8497 5.93051 13.8424C5.93381 13.8351 5.93882 13.8287 5.94511 13.8238C6.02396 13.7637 6.10144 13.7017 6.17748 13.6379C6.18415 13.6323 6.19223 13.6287 6.20079 13.6276C6.20935 13.6264 6.21807 13.6277 6.22595 13.6313C8.68078 14.775 11.3385 14.775 13.7642 13.6313C13.7722 13.6274 13.781 13.626 13.7896 13.6271C13.7983 13.6281 13.8065 13.6317 13.8133 13.6374C13.8895 13.7015 13.9671 13.7636 14.0463 13.8238C14.0526 13.8286 14.0577 13.835 14.061 13.8423C14.0644 13.8496 14.0659 13.8576 14.0655 13.8656C14.0651 13.8737 14.0627 13.8815 14.0587 13.8884C14.0546 13.8953 14.0489 13.9011 14.0422 13.9052C13.6683 14.128 13.2767 14.3182 12.8715 14.4737C12.8652 14.4762 12.8595 14.4799 12.8547 14.4848C12.8499 14.4896 12.8462 14.4955 12.8438 14.5019C12.8414 14.5083 12.8404 14.5152 12.8407 14.522C12.8411 14.5289 12.8429 14.5356 12.846 14.5417C13.0704 14.984 13.3263 15.4089 13.6116 15.8129C13.6174 15.8212 13.6256 15.8274 13.6351 15.8307C13.6445 15.834 13.6547 15.8341 13.6643 15.8312C15.0134 15.4098 16.2821 14.7564 17.4159 13.8992C17.4214 13.8951 17.426 13.8898 17.4293 13.8838C17.4327 13.8777 17.4348 13.871 17.4354 13.864C17.7482 10.5624 16.9116 7.69442 15.2177 5.15199ZM7.51254 12.1245C6.77346 12.1245 6.16447 11.4321 6.16447 10.5818C6.16447 9.73151 6.76164 9.03908 7.51254 9.03908C8.2693 9.03908 8.87239 9.73752 8.86058 10.5818C8.86058 11.4321 8.26338 12.1245 7.51254 12.1245ZM12.4967 12.1245C11.7577 12.1245 11.1487 11.4321 11.1487 10.5818C11.1487 9.73151 11.7459 9.03908 12.4967 9.03908C13.2536 9.03908 13.8566 9.73752 13.8448 10.5818C13.8448 11.4321 13.2536 12.1245 12.4967 12.1245Z" />
    </svg>
  )
})

export const TwitterAuthIcon = memo(function TwitterAuthIcon(props: IconProps) {
  return (
    <svg
      width="1em"
      height="1em"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M9.99023 1.58203C10.422 1.58203 10.8538 1.74676 11.1832 2.07617L12.7055 3.59857H14.8069C15.7388 3.59857 16.494 4.35393 16.494 5.28568V7.38705L17.9433 8.83635C18.6022 9.4952 18.6022 10.5634 17.9433 11.2223L16.494 12.6716V14.846C16.494 15.7778 15.7387 16.5331 14.8069 16.5331H12.6325L11.1832 17.9824C10.8538 18.3118 10.422 18.4766 9.99023 18.4766C9.5584 18.4766 9.1266 18.3118 8.79725 17.9824L7.34793 16.5331H5.2466C4.31488 16.5331 3.55949 15.7778 3.55949 14.846V12.7447L2.03715 11.2223C1.37824 10.5634 1.37824 9.49521 2.03715 8.83635L3.55947 7.31395V5.2857C3.55947 4.35396 4.31488 3.59859 5.24658 3.59859H7.2749L8.79723 2.07619C9.12662 1.74678 9.5584 1.58203 9.9902 1.58203H9.99023ZM13.1167 8.28549C12.8887 8.05742 12.5189 8.05742 12.2909 8.28549L9.5032 11.0731L8.30125 9.91242C8.07156 9.69061 7.70691 9.69471 7.48227 9.91994L7.47549 9.92684L7.47529 9.92703C7.25127 10.159 7.25771 10.5287 7.48973 10.7528L9.07367 12.2824C9.14782 12.3542 9.23975 12.405 9.34002 12.4295C9.54357 12.498 9.77738 12.4511 9.93955 12.2889L13.1169 9.11156C13.345 8.8835 13.345 8.51373 13.1169 8.28568L13.1167 8.28549Z"
        fill="#2E60FF"
      />
    </svg>
  )
})

export const EmailIcon = memo(function EmailIcon(
  props: IconProps & { theme?: 'blue' | 'dark' | 'light' },
) {
  const theme = props.theme || 'blue'
  return (
    <svg
      width="1em"
      height="1em"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M4.21046 5H19.7895C21.2593 5 22 5.68833 22 7.08833V16.9117C22 18.3 21.2593 19 19.7895 19H4.21046C2.74074 19 2 18.3 2 16.9117V7.08833C2 5.68833 2.74074 5 4.21046 5ZM11.9941 15.0333L19.9189 8.58167C20.2011 8.34833 20.4245 7.81167 20.0717 7.33333C19.7307 6.855 19.1076 6.84333 18.6961 7.135L11.9941 11.6383L5.30394 7.135C4.89242 6.84333 4.26925 6.855 3.92828 7.33333C3.57554 7.81167 3.79894 8.34833 4.08113 8.58167L11.9941 15.0333Z"
        className={clsx('transition-all', {
          'fill-black/40 hover:fill-black/80': theme === 'dark',
          'dark:fill-white/40 dark:hover:fill-white/80': theme === 'dark',
          'fill-white/40 hover:fill-white/80': theme === 'light',
          'fill-dark-foreground-active': theme === 'blue',
        })}
        fill="currentColor"
      />
    </svg>
  )
})

export const TelegramIcon = memo(function TelegramIcon(props: IconProps) {
  return (
    <svg
      {...props}
      width="1em"
      height="1em"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.6073 3.43025C16.8122 3.34443 17.0365 3.31483 17.2568 3.34453C17.4771 3.37424 17.6854 3.46215 17.86 3.59913C18.0346 3.73611 18.1691 3.91714 18.2495 4.12339C18.3299 4.32963 18.3533 4.55355 18.3172 4.77183L16.4365 16.1225C16.254 17.2174 15.0467 17.8453 14.0375 17.2999C13.1933 16.8436 11.9395 16.1407 10.8117 15.4072C10.2479 15.04 8.52055 13.8643 8.73283 13.0276C8.91527 12.3123 11.8176 9.62415 13.4761 8.02596C14.127 7.39807 13.8302 7.03586 13.0615 7.61342C11.1517 9.04742 8.08769 11.2281 7.07436 11.842C6.18044 12.3832 5.71441 12.4756 5.15716 12.3832C4.14052 12.2149 3.19767 11.9542 2.42814 11.6365C1.38828 11.2075 1.43886 9.78504 2.42731 9.37085L16.6073 3.43025Z"
        fill="currentColor"
      />
    </svg>
  )
})

export const FacebookIcon = memo(function FacebookIcon(props: IconProps) {
  return (
    <svg
      {...props}
      width="1em"
      height="1em"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11.6663 11.25H13.7497L14.583 7.91667H11.6663V6.25001C11.6663 5.39167 11.6663 4.58334 13.333 4.58334H14.583V1.78334C14.3113 1.74751 13.2855 1.66667 12.2022 1.66667C9.93967 1.66667 8.33301 3.04751 8.33301 5.58334V7.91667H5.83301V11.25H8.33301V18.3333H11.6663V11.25Z"
        fill="currentColor"
      />
    </svg>
  )
})

export const LinkIcon = memo(function LinkIcon(props: IconProps) {
  return (
    <svg
      {...props}
      width="1em"
      height="1em"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M10.6542 14.6508C10.7416 14.7379 10.811 14.8414 10.8583 14.9553C10.9056 15.0693 10.93 15.1915 10.93 15.3148C10.93 15.4382 10.9056 15.5604 10.8583 15.6744C10.811 15.7883 10.7416 15.8918 10.6542 15.9789L10.1902 16.443C9.31081 17.3223 8.11815 17.8163 6.87455 17.8163C5.63095 17.8163 4.43828 17.3223 3.55892 16.443C2.67957 15.5636 2.18555 14.3709 2.18555 13.1273C2.18555 11.8837 2.67957 10.6911 3.55892 9.81172L5.4433 7.92813C6.28821 7.08113 7.425 6.58924 8.62082 6.55322C9.81664 6.5172 10.981 6.93977 11.8753 7.73438C11.9677 7.81645 12.0429 7.91591 12.0968 8.02708C12.1507 8.13824 12.1822 8.25893 12.1895 8.38226C12.1967 8.50559 12.1796 8.62914 12.1391 8.74585C12.0986 8.86257 12.0355 8.97017 11.9535 9.0625C11.8714 9.15484 11.7719 9.2301 11.6608 9.284C11.5496 9.3379 11.4289 9.36937 11.3056 9.37663C11.1822 9.38388 11.0587 9.36678 10.942 9.32628C10.8253 9.28579 10.7177 9.2227 10.6253 9.14063C10.089 8.66432 9.39098 8.41093 8.67401 8.43227C7.95704 8.45362 7.27532 8.7481 6.7683 9.25547L4.88549 11.1367C4.35795 11.6643 4.06159 12.3797 4.06159 13.1258C4.06159 13.8718 4.35795 14.5873 4.88549 15.1148C5.41302 15.6424 6.12851 15.9387 6.87455 15.9387C7.62059 15.9387 8.33608 15.6424 8.86361 15.1148L9.32767 14.6508C9.41474 14.5636 9.51814 14.4945 9.63195 14.4473C9.74576 14.4001 9.86775 14.3758 9.99096 14.3758C10.1142 14.3758 10.2362 14.4001 10.35 14.4473C10.4638 14.4945 10.5672 14.5636 10.6542 14.6508ZM16.4417 3.55703C15.5617 2.67903 14.3693 2.18594 13.1261 2.18594C11.883 2.18594 10.6906 2.67903 9.81049 3.55703L9.34642 4.0211C9.1703 4.19722 9.07136 4.43609 9.07136 4.68516C9.07136 4.93423 9.1703 5.1731 9.34642 5.34922C9.52254 5.52534 9.76141 5.62429 10.0105 5.62429C10.2596 5.62429 10.4984 5.52534 10.6745 5.34922L11.1386 4.88516C11.6661 4.35763 12.3816 4.06126 13.1277 4.06126C13.8737 4.06126 14.5892 4.35763 15.1167 4.88516C15.6443 5.41269 15.9406 6.12818 15.9406 6.87422C15.9406 7.62027 15.6443 8.33575 15.1167 8.86328L13.2331 10.7477C12.7257 11.2548 12.0436 11.5489 11.3264 11.5696C10.6093 11.5904 9.9113 11.3363 9.37533 10.8594C9.28299 10.7773 9.1754 10.7142 9.05868 10.6737C8.94196 10.6332 8.81841 10.6161 8.69509 10.6234C8.57176 10.6306 8.45107 10.6621 8.3399 10.716C8.22874 10.7699 8.12928 10.8452 8.0472 10.9375C7.96513 11.0298 7.90204 11.1374 7.86155 11.2542C7.82106 11.3709 7.80395 11.4944 7.8112 11.6177C7.81846 11.7411 7.84993 11.8618 7.90383 11.9729C7.95773 12.0841 8.03299 12.1836 8.12533 12.2656C9.01906 13.0601 10.1826 13.4829 11.3779 13.4476C12.5731 13.4123 13.7097 12.9216 14.555 12.0758L16.4394 10.1922C17.3184 9.31233 17.8124 8.11961 17.8128 6.87588C17.8133 5.63215 17.3201 4.43908 16.4417 3.5586V3.55703Z"
        fill="currentColor"
      />
    </svg>
  )
})

export const FootIcon = memo(function FootIcon(props: IconProps) {
  return (
    <svg
      {...props}
      width="1em"
      height="1em"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M8.32226 3.72437C8.32226 5.78245 6.65481 7.44985 4.59664 7.44985C2.53957 7.44985 0.87207 5.78242 0.87207 3.72437C0.87207 1.66738 2.53957 0 4.59664 0C6.6548 0 8.32226 1.66738 8.32226 3.72437ZM13.3509 1.86274C13.3509 2.89174 12.5172 3.72547 11.4881 3.72547C10.459 3.72547 9.62527 2.89176 9.62527 1.86274C9.62527 0.833703 10.459 0 11.4881 0C12.5172 0 13.3509 0.833703 13.3509 1.86274ZM18.7516 2.3276C18.7516 3.35664 17.9179 4.19034 16.8888 4.19034C15.8597 4.19034 15.026 3.35664 15.026 2.3276C15.026 1.29856 15.8597 0.464855 16.8888 0.464855C17.9179 0.464834 18.7516 1.29856 18.7516 2.3276ZM23.1288 4.74906C23.1288 5.7781 22.295 6.6118 21.2659 6.6118C20.2369 6.6118 19.4031 5.7781 19.4031 4.74906C19.4031 3.72001 20.2369 2.88631 21.2659 2.88631C22.295 2.88631 23.1288 3.72002 23.1288 4.74906ZM6.66788 9.54504C6.66788 9.54504 7.85519 6.2626 12.3949 5.70389C12.3949 5.70389 19.4031 5.21501 20.6101 12.1247C21.1994 15.501 20.9539 22.8144 15.5378 23.9275C14.2304 24.1959 10.4393 23.862 10.9282 20.4399C11.1007 19.2297 12.2356 17.26 10.9282 15.5512C10.0203 14.3639 5.48058 14.0147 6.66788 9.54504Z"
        fill="currentColor"
      />
    </svg>
  )
})

export const DoneIcon = memo(function DoneIcon(props: IconProps) {
  return (
    <svg
      {...props}
      width="1em"
      height="1em"
      viewBox="0 0 22 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <mask id="path-1-inside-1_736_734" fill="white">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M11 0C4.925 0 0 4.925 0 11C0 17.075 4.925 22 11 22C17.075 22 22 17.075 22 11C22 4.925 17.075 0 11 0ZM15.768 9.14C15.8558 9.03964 15.9226 8.92274 15.9646 8.79617C16.0065 8.6696 16.0227 8.53591 16.0123 8.40298C16.0018 8.27005 15.9648 8.14056 15.9036 8.02213C15.8423 7.90369 15.758 7.79871 15.6555 7.71334C15.5531 7.62798 15.4346 7.56396 15.3071 7.52506C15.1796 7.48616 15.0455 7.47316 14.9129 7.48683C14.7802 7.50049 14.6517 7.54055 14.5347 7.60463C14.4178 7.66872 14.3149 7.75554 14.232 7.86L9.932 13.019L7.707 10.793C7.5184 10.6108 7.2658 10.51 7.0036 10.5123C6.7414 10.5146 6.49059 10.6198 6.30518 10.8052C6.11977 10.9906 6.0146 11.2414 6.01233 11.5036C6.01005 11.7658 6.11084 12.0184 6.293 12.207L9.293 15.207C9.39126 15.3052 9.50889 15.3818 9.63842 15.4321C9.76794 15.4823 9.9065 15.505 10.0453 15.4986C10.184 15.4923 10.32 15.4572 10.4444 15.3954C10.5688 15.3337 10.6791 15.2467 10.768 15.14L15.768 9.14Z"
        />
      </mask>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M11 0C4.925 0 0 4.925 0 11C0 17.075 4.925 22 11 22C17.075 22 22 17.075 22 11C22 4.925 17.075 0 11 0ZM15.768 9.14C15.8558 9.03964 15.9226 8.92274 15.9646 8.79617C16.0065 8.6696 16.0227 8.53591 16.0123 8.40298C16.0018 8.27005 15.9648 8.14056 15.9036 8.02213C15.8423 7.90369 15.758 7.79871 15.6555 7.71334C15.5531 7.62798 15.4346 7.56396 15.3071 7.52506C15.1796 7.48616 15.0455 7.47316 14.9129 7.48683C14.7802 7.50049 14.6517 7.54055 14.5347 7.60463C14.4178 7.66872 14.3149 7.75554 14.232 7.86L9.932 13.019L7.707 10.793C7.5184 10.6108 7.2658 10.51 7.0036 10.5123C6.7414 10.5146 6.49059 10.6198 6.30518 10.8052C6.11977 10.9906 6.0146 11.2414 6.01233 11.5036C6.01005 11.7658 6.11084 12.0184 6.293 12.207L9.293 15.207C9.39126 15.3052 9.50889 15.3818 9.63842 15.4321C9.76794 15.4823 9.9065 15.505 10.0453 15.4986C10.184 15.4923 10.32 15.4572 10.4444 15.3954C10.5688 15.3337 10.6791 15.2467 10.768 15.14L15.768 9.14Z"
        fill="#2E60FF"
      />
      <path
        d="M15.768 9.14L-0.288226 -4.90666L-0.45681 -4.71396L-0.62072 -4.51727L15.768 9.14ZM14.232 7.86L30.6194 21.5188L30.784 21.3214L30.9438 21.12L14.232 7.86ZM9.932 13.019L-5.15633 28.1006L11.3606 44.6249L26.3194 26.6778L9.932 13.019ZM7.707 10.793L22.7953 -4.28856L22.6626 -4.42136L22.5275 -4.55182L7.707 10.793ZM6.293 12.207L-9.05182 27.0275L-8.92303 27.1609L-8.79195 27.2919L6.293 12.207ZM9.293 15.207L-5.79195 30.2919L-5.78737 30.2965L9.293 15.207ZM10.768 15.14L27.1543 28.8002L27.1567 28.7973L10.768 15.14ZM11 -21.3333C-6.85707 -21.3333 -21.3333 -6.85707 -21.3333 11H21.3333C21.3333 16.7071 16.7071 21.3333 11 21.3333V-21.3333ZM-21.3333 11C-21.3333 28.8571 -6.85707 43.3333 11 43.3333V0.666666C16.7071 0.666666 21.3333 5.29292 21.3333 11H-21.3333ZM11 43.3333C28.8571 43.3333 43.3333 28.8571 43.3333 11H0.666666C0.666666 5.29292 5.29292 0.666666 11 0.666666V43.3333ZM43.3333 11C43.3333 -6.85707 28.8571 -21.3333 11 -21.3333V21.3333C5.29292 21.3333 0.666666 16.7071 0.666666 11H43.3333ZM31.8242 23.1867C33.7851 20.9453 35.2778 18.3345 36.2147 15.5078L-4.2855 2.08459C-3.43252 -0.488986 -2.07346 -2.86602 -0.288226 -4.90666L31.8242 23.1867ZM36.2147 15.5078C37.1516 12.681 37.5136 9.69543 37.2796 6.72666L-5.2551 10.0793C-5.46815 7.3764 -5.13848 4.65819 -4.2855 2.08459L36.2147 15.5078ZM37.2796 6.72666C37.0456 3.75793 36.2203 0.865947 34.8521 -1.77914L-3.04494 17.8234C-4.29061 15.4152 -5.04206 12.7822 -5.2551 10.0793L37.2796 6.72666ZM34.8521 -1.77914C33.4839 -4.42427 31.6005 -6.76898 29.3128 -8.67538L1.99828 24.1021C-0.0845277 22.3664 -1.79925 20.2317 -3.04494 17.8234L34.8521 -1.77914ZM29.3128 -8.67538C27.0252 -10.5817 24.3793 -12.0115 21.5307 -12.8803L9.08345 27.9304C6.48998 27.1394 4.08104 25.8377 1.99828 24.1021L29.3128 -8.67538ZM21.5307 -12.8803C18.6823 -13.7491 15.6888 -14.0394 12.7266 -13.7342L17.0991 28.7078C14.4022 28.9857 11.6769 28.7214 9.08345 27.9304L21.5307 -12.8803ZM12.7266 -13.7342C9.76435 -13.429 6.89301 -12.5345 4.28153 -11.1032L24.788 26.3125C22.4103 27.6156 19.7961 28.43 17.0991 28.7078L12.7266 -13.7342ZM4.28153 -11.1032C1.67008 -9.67193 -0.628777 -7.73284 -2.47977 -5.4L30.9438 21.12C29.2585 23.2439 27.1656 25.0094 24.788 26.3125L4.28153 -11.1032ZM-2.15542 -5.79883L-6.45542 -0.639829L26.3194 26.6778L30.6194 21.5188L-2.15542 -5.79883ZM25.0203 -2.06256L22.7953 -4.28856L-7.38133 25.8746L-5.15633 28.1006L25.0203 -2.06256ZM22.5275 -4.55182C18.3154 -8.62001 12.674 -10.8711 6.81823 -10.8202L7.18897 31.8449C1.85763 31.8912 -3.27861 29.8417 -7.11352 26.1378L22.5275 -4.55182ZM6.81823 -10.8202C0.962515 -10.7693 -4.63897 -8.42056 -8.77976 -4.27976L21.3901 25.8901C17.6201 29.6601 12.5203 31.7985 7.18897 31.8449L6.81823 -10.8202ZM-8.77976 -4.27976C-12.9205 -0.138988 -15.2693 5.46249 -15.3202 11.3182L27.3449 11.689C27.2985 17.0203 25.1601 22.1202 21.3901 25.8901L-8.77976 -4.27976ZM-15.3202 11.3182C-15.3711 17.174 -13.12 22.8154 -9.05182 27.0275L21.6378 -2.61352C25.3417 1.22137 27.3912 6.3576 27.3449 11.689L-15.3202 11.3182ZM-8.79195 27.2919L-5.79195 30.2919L24.3779 0.122058L21.3779 -2.87794L-8.79195 27.2919ZM-5.78737 30.2965C-3.59296 32.4896 -0.965702 34.2014 1.92691 35.3229L17.3499 -4.45874C19.9835 -3.43772 22.3755 -1.87921 24.3734 0.117486L-5.78737 30.2965ZM1.92691 35.3229C4.81949 36.4443 7.91404 36.9508 11.0133 36.81L9.07723 -5.81271C11.899 -5.94088 14.7164 -5.47974 17.3499 -4.45874L1.92691 35.3229ZM11.0133 36.81C14.1126 36.6692 17.1485 35.8843 19.9275 34.5052L0.961355 -3.71431C3.49148 -4.96986 6.2555 -5.68454 9.07723 -5.81271L11.0133 36.81ZM19.9275 34.5052C22.7066 33.1261 25.1678 31.1831 27.1543 28.8002L-5.61829 1.47982C-3.80971 -0.689695 -1.56891 -2.45869 0.961355 -3.71431L19.9275 34.5052ZM27.1567 28.7973L32.1567 22.7973L-0.62072 -4.51727L-5.62072 1.48273L27.1567 28.7973Z"
        fill="#DEE1EA"
        mask="url(#path-1-inside-1_736_734)"
      />
    </svg>
  )
})

export const BlueTickIcon = memo(function BlueTickIcon(props: IconProps) {
  return (
    <svg
      {...props}
      width="1em"
      height="1em"
      viewBox="1 1 18 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M9.99967 0.833252C4.93717 0.833252 0.833008 4.93742 0.833008 9.99992C0.833008 15.0624 4.93717 19.1666 9.99967 19.1666C15.0622 19.1666 19.1663 15.0624 19.1663 9.99992C19.1663 4.93742 15.0622 0.833252 9.99967 0.833252ZM13.973 8.44992C14.0462 8.36629 14.1019 8.26887 14.1368 8.16339C14.1718 8.05792 14.1853 7.94651 14.1766 7.83574C14.1678 7.72496 14.137 7.61705 14.086 7.51836C14.0349 7.41966 13.9647 7.33217 13.8793 7.26104C13.7939 7.1899 13.6952 7.13655 13.5889 7.10414C13.4826 7.07172 13.3709 7.06089 13.2604 7.07227C13.1499 7.08366 13.0427 7.11704 12.9453 7.17045C12.8479 7.22385 12.7621 7.29621 12.693 7.38325L9.10967 11.6824L7.25551 9.82742C7.09834 9.67562 6.88784 9.59162 6.66934 9.59352C6.45084 9.59542 6.24183 9.68306 6.08733 9.83757C5.93282 9.99208 5.84518 10.2011 5.84328 10.4196C5.84138 10.6381 5.92538 10.8486 6.07717 11.0058L8.57717 13.5058C8.65905 13.5876 8.75709 13.6515 8.86502 13.6933C8.97295 13.7351 9.08842 13.754 9.20406 13.7488C9.31971 13.7435 9.43299 13.7142 9.53668 13.6628C9.64038 13.6113 9.73221 13.5388 9.80634 13.4499L13.973 8.44992Z"
        fill="#2E60FF"
      />
    </svg>
  )
})
